define(["jquery"],function(h){let s={byName(t,e){let s=h("#id_"+t);return s=!s.length||e&&s[0].tagName!==e?h('[name="'+t+'"]'):s},checkbox(t){return this.byName(t,"INPUT")},select(t){return this.byName(t,"SELECT")},parseJSON(t,e){try{return JSON.parse(t)}catch{return e}}};class i{constructor(t,e){this.s=t.selectors||{},this.t=t.i18n||{},this.ds=e||{},this.methodKeys=Object.keys(this.ds.methods||{}),this.$gk=s.select(this.s.gatewayKey),this.$def=this.s.defaultMethod?s.select(this.s.defaultMethod):h(),this.$desc=this.s.description?s.byName(this.s.description):h(),this.$state=this.s.state?s.byName(this.s.state):h(),this._cb=new Map,this._sel=new Map}init(){if(this.$gk.length){let e=this.$gk.val();this.methodKeys.forEach(t=>this.applyRowCycle(t,e)),this.syncAllToState(),this.bindGatewayChange(),this.bindMethodRowChanges(),this.bindOtherChanges(),this.bindSubmitGuard()}}$cbOf(t){var e,t=this.s.enablePrefix+t;return this._cb.has(t)?this._cb.get(t):(e=s.checkbox(t),this._cb.set(t,e),e)}$selOf(t){var e,t=this.s.accountPrefix+t;return this._sel.has(t)?this._sel.get(t):(e=s.select(t),this._sel.set(t,e),e)}applyRowCycle(t,e){var s=this.$cbOf(t),h=this.$selOf(t);s.length&&h.length&&(e=this.ds.accounts&&this.ds.accounts[e]?this.ds.accounts[e]:{},this.rebuildSelect(h,e[t])?(s.prop("disabled",!1),this.lockSelect(h,!s.is(":checked"))):(s.prop("checked",!1).prop("disabled",!0),this.lockSelect(h,!0,!0)))}rebuildSelect(t,e){var s=t[0],h=t.val(),i=(s.options.length=0,e?Object.keys(e):[]);if(!i.length)return s.add(new Option(this.t.noaccounts||"No accounts","",!0,!0)),t.val(""),!1;for(let t=0;t<i.length;t++){var a=i[t];s.add(new Option(e[a],a,!1,!1))}var n=h&&Object.prototype.hasOwnProperty.call(e,h)?h:i[0];t.val(n);for(let t=0;t<s.options.length;t++)s.options[t].selected=s.options[t].value===n;return!0}lockSelect(t,e,s){t.toggleClass("ifp-ui-locked",!!e),e?(t.prop("disabled",!0),!0===s&&(t.val(""),e=t[0])&&e.options&&e.options.length&&(e.options[0].selected=!0)):t.prop("disabled",!1)}readState(){var t;return this.$state.length?(t=this.$state.val()||"{}",(t=s.parseJSON(t,{})||{}).methods&&"object"==typeof t.methods||(t.methods={}),t):{gatewaykey:"",methods:{}}}writeState(t){this.$state.length&&this.$state.val(JSON.stringify(t))}syncRow(t,e){var s=this.$cbOf(e),h=this.$selOf(e);t.methods[e]={enabled:!(!s.length||!s.is(":checked")||s.is(":disabled")),account:h.length&&h.val()||""}}syncAllToState(){let e=this.readState();e.gatewaykey=this.$gk.val()||"",this.$def.length&&(e.defaultmethod=this.$def.val()||""),this.$desc.length&&(e.description=this.$desc.val()||""),this.methodKeys.forEach(t=>this.syncRow(e,t)),this.writeState(e)}bindGatewayChange(){this.$gk.on("change",()=>{let e=this.$gk.val();this.methodKeys.forEach(t=>this.applyRowCycle(t,e)),this.syncAllToState()})}bindMethodRowChanges(){this.methodKeys.forEach(t=>{let e=this.$cbOf(t),s=this.$selOf(t);e.length&&e.on("change",()=>{this.lockSelect(s,!e.is(":checked")),this.syncAllToState()}),s.length&&s.on("change",()=>this.syncAllToState())})}bindOtherChanges(){this.$def.length&&this.$def.on("change",()=>this.syncAllToState()),this.$desc.length&&this.$desc.on("input change",()=>this.syncAllToState())}bindSubmitGuard(){var t=this.$gk.closest("form");t.length&&t.on("submit",()=>this.syncAllToState())}}return{init:function(t,e){var s=window.ifthenpay||{};new i({selectors:t,i18n:e},s).init()}}});